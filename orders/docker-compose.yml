version: '3.9'

services:
    db:
        image: postgres:13-alpine
        restart: unless-stopped
        volumes:
            #Cценарии в /docker-entrypoint-initdb.d запускаются только в том случае, если каталог данных пуст.
            #Это означает, что во время запуска любая база данных, запущенная до этого, не будет изменена.
            - ../data/initdb/:/docker-entrypoint-initdb.d
            - ../data/db/:/var/lib/postgresql/data/
        expose:
            - 5432
        env_file:
            - .env
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        restart: unless-stopped
        image: redis:7.0.0-alpine3.15
        volumes:
            - ../data/redis/:/data/
        expose:
            - 6379

    celery:
        build: .
        env_file:
            - .env
        entrypoint: celery -A orders worker
        depends_on:
            - redis
        volumes:
            - .:/app

    migrate:
        build: .
        command: >
          sh -c "python /app/manage.py collectstatic --noinput &&
                 python /app/manage.py makemigrations backend --noinput &&
                 python /app/manage.py migrate --noinput"        
        volumes: 
            - .:/app
        depends_on:
            db:
                condition: service_healthy
        env_file:
            - .env
        
    django:
        restart: unless-stopped
        build: .
        command: sh -c "gunicorn --bind 0.0.0.0:8000 orders.wsgi"
        volumes: 
            - .:/app
        depends_on:
            - migrate
            - redis
            - celery
        expose: 
            - 8000        
        environment:
            - DEBUG='false'
        env_file:
            - .env 

    nginx:
        image: nginx:1.19.8-alpine
        restart: unless-stopped
        depends_on:
            - django
        ports:
            - "80:80"
        volumes: 
            - ./www/static:/var/www/static
            - ./www/html/errors:/var/www/html/errors
            - ./nginx-conf.conf:/etc/nginx/conf.d/default.conf
